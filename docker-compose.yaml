services:
    homepage:
        image: ghcr.io/gethomepage/homepage:v1.1.1
        container_name: homepage
        ports:
            - 3000:3000
        volumes:
            - ./homepage/config:/app/config
            - ./homepage/icons:/app/public/icons
            - ./homepage/images:/app/public/images
        env_file:
            - .env
        environment:
            HOMEPAGE_ALLOWED_HOSTS: ${EXODUS_IP}:3000
            PUID: 1000
            PGID: 1000
        restart: unless-stopped
    dockerproxy:
        image: ghcr.io/tecnativa/docker-socket-proxy:latest
        container_name: dockerproxy
        environment:
            - CONTAINERS=1 # Allow access to viewing containers
            - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
            - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
            - POST=0 # Disallow any POST operations (effectively read-only)
        ports:
            - 127.0.0.1:2375:2375
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
        restart: unless-stopped
    jellyfin:
        container_name: jellyfin
        ports:
            - 8096:8096
        volumes:
            - ./jellyfin/config:/config
            - ./jellyfin/cache:/cache
            - type: bind
              source: /media/vault
              target: /media/vault
        restart: unless-stopped
        image: jellyfin/jellyfin:2025032405
    open-webui:
        network_mode: host
        volumes:
            - ./ollama:/root/.ollama
            - ./open-webui/data:/app/backend/data
        container_name: open-webui
        restart: always
        image: ghcr.io/open-webui/open-webui:ollama
    pihole:
        container_name: pihole
        image: pihole/pihole:2025.03.1
        ports:
            # DNS Ports
            - "53:53/tcp"
            - "53:53/udp"
            # Default HTTP Port
            - "80:80/tcp"
            # Default HTTPs Port. FTL will generate a self-signed certificate
            - "443:443/tcp"
            # Uncomment the line below if you are using Pi-hole as your DHCP server
            #- "67:67/udp"
            # Uncomment the line below if you are using Pi-hole as your NTP server
            #- "123:123/udp"
        env_file:
            - .env
        environment:
            # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
            TZ: 'Asia/Singapore'
            # Set a password to access the web interface. Not setting one will result in a random password being assigned
            FTLCONF_webserver_api_password: ${HOMEPAGE_VAR_PIHOLE_PASSWORD}
            # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
            FTLCONF_dns_listeningMode: 'all'
            FTLCONF_LOCAL_IPV4: ${EXODUS_IP}
        # Volumes store your data between container upgrades
        volumes:
            # For persisting Pi-hole's databases and common configuration file
            - './pihole/etc-pihole:/etc/pihole'
            # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
            #- './etc-dnsmasq.d:/etc/dnsmasq.d'
        cap_add:
            # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
            # Required if you are using Pi-hole as your DHCP server, else not needed
            - NET_ADMIN
            # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
            - SYS_TIME
            # Optional, if Pi-hole should get some more processing time
            - SYS_NICE
        restart: unless-stopped
    portainer-ce:
        ports:
            - 8000:8000
            - 9443:9443
        container_name: portainer
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./portainer:/data
        image: portainer/portainer-ce:2.27.3